-- Pacote PKG_ALUNO
CREATE OR REPLACE PACKAGE PKG_ALUNO AS
    PROCEDURE excluir_aluno(p_id_aluno IN NUMBER);
    CURSOR listar_alunos_maior_idade;
    CURSOR listar_alunos_por_curso(p_id_curso IN NUMBER);
END PKG_ALUNO;

CREATE OR REPLACE PACKAGE BODY PKG_ALUNO AS
    PROCEDURE excluir_aluno(p_id_aluno IN NUMBER) IS
    BEGIN
        DELETE FROM matriculas WHERE id_aluno = p_id_aluno;
        DELETE FROM alunos WHERE id = p_id_aluno;
    END excluir_aluno;

    CURSOR listar_alunos_maior_idade IS
        SELECT nome, data_nascimento FROM alunos WHERE TRUNC(MONTHS_BETWEEN(SYSDATE, data_nascimento)) / 12 > 18;

    CURSOR listar_alunos_por_curso(p_id_curso IN NUMBER) IS
        SELECT nome FROM alunos WHERE id IN (SELECT id_aluno FROM matriculas WHERE id_curso = p_id_curso);
END PKG_ALUNO;

-- Pacote PKG_DISCIPLINA
CREATE OR REPLACE PACKAGE PKG_DISCIPLINA AS
    PROCEDURE cadastrar_disciplina(p_nome IN VARCHAR2, p_descricao IN VARCHAR2, p_carga_horaria IN NUMBER);
    CURSOR total_alunos_por_disciplina;
    CURSOR media_idade_por_disciplina(p_id_disciplina IN NUMBER);
    PROCEDURE listar_alunos_disciplina(p_id_disciplina IN NUMBER);
END PKG_DISCIPLINA;

CREATE OR REPLACE PACKAGE BODY PKG_DISCIPLINA AS
    PROCEDURE cadastrar_disciplina(p_nome IN VARCHAR2, p_descricao IN VARCHAR2, p_carga_horaria IN NUMBER) IS
    BEGIN
        INSERT INTO disciplinas (nome, descricao, carga_horaria) VALUES (p_nome, p_descricao, p_carga_horaria);
    END cadastrar_disciplina;

    CURSOR total_alunos_por_disciplina IS
        SELECT d.nome, COUNT(m.id_aluno) AS total_alunos 
        FROM disciplinas d LEFT JOIN matriculas m ON d.id = m.id_curso 
        GROUP BY d.nome HAVING COUNT(m.id_aluno) > 10;

    CURSOR media_idade_por_disciplina(p_id_disciplina IN NUMBER) IS
        SELECT AVG(TRUNC(MONTHS_BETWEEN(SYSDATE, a.data_nascimento)) / 12) AS media_idade 
        FROM alunos a JOIN matriculas m ON a.id = m.id_aluno WHERE m.id_curso = p_id_disciplina;

    PROCEDURE listar_alunos_disciplina(p_id_disciplina IN NUMBER) IS
    BEGIN
        FOR aluno IN (SELECT a.nome FROM alunos a JOIN matriculas m ON a.id = m.id_aluno WHERE m.id_curso = p_id_disciplina) LOOP
            DBMS_OUTPUT.PUT_LINE(aluno.nome);
        END LOOP;
    END listar_alunos_disciplina;
END PKG_DISCIPLINA;

-- Pacote PKG_PROFESSOR
CREATE OR REPLACE PACKAGE PKG_PROFESSOR AS
    CURSOR total_turmas_por_professor;
    FUNCTION total_turmas_professor(p_id_professor IN NUMBER) RETURN NUMBER;
    FUNCTION professor_por_disciplina(p_id_disciplina IN NUMBER) RETURN VARCHAR2;
END PKG_PROFESSOR;

CREATE OR REPLACE PACKAGE BODY PKG_PROFESSOR AS
    CURSOR total_turmas_por_professor IS
        SELECT p.nome, COUNT(t.id) AS total_turmas 
        FROM professores p JOIN turmas t ON p.id = t.id_professor 
        GROUP BY p.nome HAVING COUNT(t.id) > 1;

    FUNCTION total_turmas_professor(p_id_professor IN NUMBER) RETURN NUMBER IS
        v_total NUMBER;
    BEGIN
        SELECT COUNT(*) INTO v_total FROM turmas WHERE id_professor = p_id_professor;
        RETURN v_total;
    END total_turmas_professor;

    FUNCTION professor_por_disciplina(p_id_disciplina IN NUMBER) RETURN VARCHAR2 IS
        v_nome VARCHAR2(100);
    BEGIN
        SELECT p.nome INTO v_nome FROM professores p JOIN disciplinas d ON p.id = d.id_professor WHERE d.id = p_id_disciplina;
        RETURN v_nome;
    END professor_por_disciplina;
END PKG_PROFESSOR;
